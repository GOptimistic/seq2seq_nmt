# config.yaml

seed: 666
## Where the samples will be written
save_data: run
overwrite: true
# Training files
data:
    train:
        path_src: flat_src.txt.subword.train
        path_tgt: flat_tgt.txt.subword.train
        transforms: [filtertoolong]
    valid:
        path_src: flat_src.txt.subword.dev
        path_tgt: flat_tgt.txt.subword.dev
        transforms: [filtertoolong]

# Vocabulary files, generated by onmt_build_vocab
src_vocab: run/source.vocab
tgt_vocab: run/target.vocab
share_vocab: true

# Vocabulary size - should be the same as in sentence piece
src_vocab_size: 50000
tgt_vocab_size: 50000

# Number of GPUs, and IDs of GPUs
world_size: 1
gpu_ranks: [0]

# Filter out source/target longer than n if [filtertoolong] enabled
src_seq_length: 1000
tgt_seq_length: 100

# Tokenization options
src_subword_model: source.model
tgt_subword_model: target.model

# Where to save the log file and the output models/checkpoints
log_file: train_transformer.log
log_file_level: 20
verbose: true
save_model: models_transformer/model.fren

# Training options
train_steps: 20000
valid_steps: 1000
# Stop training if it does not imporve after n validations
#early_stopping: 3
save_checkpoint_steps: 1000

warmup_steps: 1000
report_every: 100

# Batching
bucket_size: 8192
num_workers: 0  # Default: 2, set to 0 when RAM out of memory
batch_type: "tokens"
batch_size: 4096   # Tokens per batch, change when CUDA out of memory
valid_batch_size: 2048
max_generator_batches: 2
accum_count: [4]
accum_steps: [0]

# Optimization
optim: "adam"
learning_rate: 2
decay_method: "noam"
adam_beta2: 0.998
max_grad_norm: 0
label_smoothing: 0.1
param_init: 0
param_init_glorot: true
normalization: "tokens"


# Model
encoder_type: transformer
decoder_type: transformer
position_encoding: true
self_attn_type: "scaled-dot"
enc_layers: 6
dec_layers: 6
heads: 8
hidden_size: 512
word_vec_size: 512
transformer_ff: 2048
dropout_steps: [0]
dropout: [0.1]
attention_dropout: [0.1]

tensorboard: true
tensorboard_log_dir: tensorboard_transformer